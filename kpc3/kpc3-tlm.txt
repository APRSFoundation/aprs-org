KPC-3-PLUS TELEMETRY AND COMMAND FUNCTIONS                      de WB4APR
--------------------------------------------------------------------------

The KPC-3+ (and KPC-9612+) TNC's implemented the MIM module's five APRS
telemetry channels and also they have several COMMAND outputs that can
be used for remote commanding of ON/OFF circuits.  See the TELEMETRY
and COMMAND functions in your manual.  APRSdos autoamatically receives
and decodes any MIM or KPC-3+ telemetry and displays it with the LIST-
TELEMETRY command.

For consistency, APRSdos assumes that channel 1 will be volts.  For
convenience, it is useful if you use a voltage divider so that the decimal
telemetry value from 0 to 255 represents voltages from 0 to 25.5V.
The following circuit allows you to read the voltage and current of an
internal 9V NICAD battery in a KPC-3+ and have the resultant telemetry 
values read out in tenths of a volt and in MilliAmps.  This was for a 
student-lab project, not sure if I would ever use it myself, because a 
9v NICAD only lasts ONE FIFTH as long as a 9v Alkaline battery.  And for 
me, NICADS are always dead when I need them. But in this case, the KPC-3+ 
is to have a small solar panel as a mock-satellite for student demos.  
Good for about 5 hours on a charge.

But the key is the 10k/2.4k voltage divider as the input to the channel-1
analog input.  It gives the proper tenth-of-a-volt readings.

                                    switch
    Vin *--------*-->|---*----------*===>*------- - -> (KPC-3 circuitry)
                 |                  |    |
                 *---/\/\/--*--->|--*    |   
                      470   |            *--/\/\/--*--/\/\/---*GND
                            |                10k   |   2.4k
                           ---                     *----------> V-tle
                            -  9V         
                           ---               10k
                            -            *--/\/\/--* +5v
                            |    6.8k    |
                            *---/\/\/----*--------------------> I-tle
                            |    30     ===.1uF
                            *---/\/\/----*---------*GND

This is a "simplilfied diagram" but the idea is to add a 470 ohm resistor 
so the battery can charge at 12 Ma when an external supply is connected.  
Next put a 30 ohm resistor in series with the negative lead of the battery
so you can read current as the voltage drop across it.  Since this voltage
can go negative, you add a voltage divider of a 6.8 and 10k resistor to
bias the reading up near a count of 100.

Another 2.4 and 10k voltage divider measures the input voltage at the
switch (so it doesnt drain the battery when the switch is off).
Then run these two analog voltages to two of the analog input pins.  I ran
these to unused internal analog pins AN2 and AN3 so that the external
KPC-3+ analog inputs are still available for other sensors..

The LONGEST part of this project was finding pins 63 and 65 on the 68 pin
CPU chip!  Looking at the bottom of the board, with the LEDS to the left
and the connectors to the right, here are the top row of CPU pins:

        61 63 65 67  1  3  5  7  9
     60 62 64 66 68  2  4  6  8 11 10
     58 59 
     56 57
     .. ..

Pin 59 = AN0* going to jumper J8
Pin 61 = AN1* going to Jumper J10
Pin 63 = AN2* unconnected
Pin 65 = AN3* unconnected
Pin 60 = AN4 goes to real-time clock circuit
Pin 62 = AN5* unconnected
Pins 67 and  1 are convenient grounds
Pins 9, 10 and 11 are NOT a typo.  You count funny around the corners.
(I HOPE I got this right!   I DENY any responsibility!)

Only the analog pins marked with * are included in the Telemetry Packet.

Again, this is a simplified diagram, but you get the idea... Also, these
values will be close to the ones needed to actually give you the actual
readings in tenths of a volt and MA, but of course the only way to get it
right is to use adjustable pots, but these are close enough for me.
A reading of 100 equals no current and 112 means 12 ma charge and 82 means
a discharge of 18 Ma, etc.

de WB4APR, Bob
